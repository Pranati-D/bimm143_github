---
title: "Class 5: Data Visualization with ggplot"
author: "Pranati (PID: A16327318)"
format: pdf
toc: true
---

Today we will have our first play with the **ggplot2** package - one of the most popular graphics packages on the planet.

There are many plotting systems in R. These include so-called *"base"* ploting/graphics.

```{r}
plot(cars)
```
Base plot is generally rather short code and somewhat dull plots - but it is always there for you and is fast for big datasets.

If I want to use **ggplot2** it takes some more work.


I need to install the package first to my computer. To do this I can use the function `install.packages("ggplot2")`

```{r}
library(ggplot2)
```

Every ggplot has atleast 3 things: 

- **data** (the data.frame with the data you want to plot)
- **aes** (the aesthetic mapping of the data to teh plot)
- **geom** (how you want the plot to look, points, lines, columns, etc.)

```{r}
head(cars)
```
```{r}
ggplot(cars, 
  aes(speed, dist)) +
  geom_point()
```
```{r}
bp <- ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point()
```

```{r}
bp + geom_smooth(method = "lm", se = FALSE) + 
  labs (
    title = "Stopping Distance of Old Cars",
    x = "Speed (MPH)",
    y = "Distance (ft)",
    caption = "From the `cars` dataset") +
theme_bw()
```

## A more complicated scatterplot

Here we make a plot of gene expression data:

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```
```{r}
nrow(genes)
colnames(genes)
ncol(genes)
table(genes$State)
```
```{r}
round( sum(genes$State == "up")/nrow(genes) * 100, 2)

```

```{r}
head(genes, 2)
```
```{r}
p <- ggplot(genes) +
  aes(x=Condition1, y=Condition2, col = State) +
  geom_point() +
  labs (
    title = "Genes Expression Change Based on Drug Treatment", 
    x= "Control (no drug)",
    y= "Drug Treatment"
  )
```
```{r}
p + scale_color_manual(values = c("lightpink", "lightblue", "violet"))
```
## Exploring the gapminder dataset

Here we will load up the gapminder dataset to get practice with different aes mappings

```{r}
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"

gapminder <- read.delim(url)
```
> Q. How many entries rows are in this dataset?

```{r}
nrow(gapminder)
```
> Q. How many columns?

```{r}
ncol(gapminder)
```

```{r}
head(gapminder)
```

```{r}
table(gapminder$year)
```

>Q. How many continents?

```{r}
table(gapminder$continent)
```
 
I could use the `unique()` function...
(length can tell me how many unique values I have in gapminder continent data subset)

```{r}
length ( unique(gapminder$continent) )
```

>Q. How many countries are there in the dataset?

```{r}
length( unique(gapminder$country))
```

```{r}
ggplot(gapminder) +
  aes(x=gdpPercap, y=lifeExp) +
  geom_point(alpha=0.2)
```

```{r}
ggplot(gapminder) +
  aes(x=gdpPercap, y=lifeExp, col=continent, size=pop) +
  geom_point(alpha=0.4)
```

```{r}
library(dplyr)
gapminder_2007 <- filter(gapminder, year==2007)

head(gapminder_2007)
```
Plot of 2007 with population and continent data
```{r}
ggplot(gapminder_2007)+
  aes(x=gdpPercap, y=lifeExp, col=continent, size=pop)+
  geom_point(alpha = 0.5)
```

```{r}
ggplot(gapminder) +
  aes(x=gdpPercap, y=lifeExp) +
  geom_point() +
  facet_wrap(~continent)
```

